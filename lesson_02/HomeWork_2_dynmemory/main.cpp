// Домашнее задание - рекурсия
// ---------------------------
//  ЗАДАНИЕ:
// Пользователь вводит натуральное число N. Нужно вывести все способы разложить его на слагаемые.
// Способы отличающиеся только порядком слагаемых считаются одинаковыми.
// -----------------------
// Например N = 4:
// 4 = 4
// 4 = 3 + 1
// 4 = 2 + 2
// 4 = 2 + 1 + 1
// 4 = 1 + 1 + 1 + 1
#include <iostream>
#include <cmath>

/*template <class T>
T MIN(T x,T y){
  return (x < y) ? x : y;
}*/

using namespace std;

const int MAX_N = 10000;

// Цифры
int* A; // A - указатель на int

// N - число для разложения
// m - максимальное слагаемое в сумме
// K - количество цифр
void sum(int N, int m, int K) {
  // Окончание рекурсии
  if(N == 0) {
    for(int i = 0; i < K - 1; ++i)
      cout << A[i] << " + ";

    cout << A[K - 1] << endl;
    return;
  }

  for(int x = min(N, m); x >= 1; --x) {
    // x - текущее слагаемое
    A[K] = x;
    // Сумма уменьшилась на x
    // Максимальное слагаемое - x
    sum(N - x, x, K + 1);
  }
}

void sum(int N) {
  sum(N, N, 0);
}

int main() {
  // Вводим число N
  int N;
  cout << "N = ";
  cin >> N;

  // Цифры
  A = new int[N]; // Отводим в динамической памяти массив A
  // new int[N]; - возвращает указатель на int
  int* B;
  B = A;

  // Вывод разложения на слагаемые
  sum(N);

  delete[] B;

  // A = new type[SIZE]    delete[] A  -- создание и удаление массива
  //    в динамической памяти
  // A = new type;  delete A; -- создание и удаление одиночного
  //    объекта

  return 0;
}
